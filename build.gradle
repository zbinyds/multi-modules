/**
 * 插件配置
 */
plugins {
    id 'java'
    id 'java-library'
    // apply false 不自动应用插件
    id 'org.springframework.boot' version '2.7.6' apply false
    id 'io.spring.dependency-management' version '1.0.15.RELEASE' apply false
}

/**
 * 全局配置
 */
allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenLocal()

        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/public" }

        mavenCentral()
    }
}

/**
 * 子模块通用配置
 */
subprojects {
    apply from: "${rootDir}/build-lib.gradle"

    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        api libraries.'spring-boot-starter-web'
        api libraries.'spring-boot-autoconfigure'
        api libraries.'spring-boot-configuration-processor'
        annotationProcessor libraries.'spring-boot-configuration-processor'
        api libraries.'spring-boot-starter-test'

        compileOnly libraries.'lombok'
        annotationProcessor libraries.'lombok'
        implementation libraries.'fastjson'
    }

    test {
        useJUnitPlatform()
    }

    // 配置jar包生成位置
    bootJar {
        destinationDirectory = file("$project.projectDir/target")
    }

    // 配置clean清除jar包
    clean.doFirst {
        delete "$project.projectDir/target"
        println "$project.projectDir/target"
    }
}